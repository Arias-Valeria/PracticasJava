
package evidencia3;

import java.util.ArrayList;
import java.util.Random;

public class grafica extends javax.swing.JFrame {
    
    static ArrayList <Integer> datos = new ArrayList<>();
    static ArrayList <Integer> aux = new ArrayList<>();
    static ordenarDatos ordenar = new ordenarDatos();
    static int lim = 100;
    
    /**
     * Creates new form grafica
     */
    public grafica() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Encabezado = new javax.swing.JLabel();
        NotaUsuario = new javax.swing.JLabel();
        NumerosAleatorios = new javax.swing.JTextField();
        GenerarNumeros = new javax.swing.JButton();
        Burbuja = new javax.swing.JButton();
        Seleccion = new javax.swing.JButton();
        NotaSeleccion = new javax.swing.JLabel();
        Insercion = new javax.swing.JButton();
        Quick = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Resultados = new javax.swing.JTextArea();
        Limpiar = new javax.swing.JButton();
        Shell = new javax.swing.JButton();
        Merge = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tecmilenio");
        setMinimumSize(new java.awt.Dimension(100, 100));

        Encabezado.setText("Evidencia 3. Ordenamientos de datos");

        NotaUsuario.setText("¿Cuántos numeros desea generar?: ");

        NumerosAleatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumerosAleatoriosActionPerformed(evt);
            }
        });

        GenerarNumeros.setText("Generar");
        GenerarNumeros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarNumerosActionPerformed(evt);
            }
        });

        Burbuja.setText("Burbuja");
        Burbuja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BurbujaActionPerformed(evt);
            }
        });

        Seleccion.setText("Seleccion");
        Seleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionActionPerformed(evt);
            }
        });

        NotaSeleccion.setText("Seleccione un metodo:");

        Insercion.setText("Insercion");
        Insercion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsercionActionPerformed(evt);
            }
        });

        Quick.setText("Quick");
        Quick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuickActionPerformed(evt);
            }
        });

        Resultados.setColumns(20);
        Resultados.setRows(5);
        jScrollPane2.setViewportView(Resultados);

        Limpiar.setText("Limpiar");
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });

        Shell.setText("Shell");
        Shell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShellActionPerformed(evt);
            }
        });

        Merge.setText("Merge");
        Merge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MergeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Encabezado)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NotaUsuario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(NumerosAleatorios, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Quick, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Burbuja, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Seleccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(NotaSeleccion, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Insercion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Shell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Merge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GenerarNumeros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Limpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE))
                        .addGap(24, 24, 24))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Encabezado)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NotaUsuario)
                    .addComponent(NumerosAleatorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(NotaSeleccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Burbuja)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Seleccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Insercion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Shell)
                        .addGap(11, 11, 11)
                        .addComponent(Quick)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Merge)
                        .addGap(2, 2, 2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(GenerarNumeros)
                                .addGap(174, 174, 174))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Limpiar)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NumerosAleatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumerosAleatoriosActionPerformed
        // TODO add your handling code here: NO HACER NADA.
    }//GEN-LAST:event_NumerosAleatoriosActionPerformed

    private void BurbujaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BurbujaActionPerformed
        // TODO add your handling code here:
        aux = ordenar.Burbuja(datos);
        int tope = aux.size();
        Resultados.append("\nEsta es la lista ordenada [BURBUJA]: \n");
        for(int i = 0; i < tope; i ++){
            String numActual = String.valueOf(aux.get(i));
            Resultados.append(numActual + ", ");
        }
        Resultados.append("\n ");
    }//GEN-LAST:event_BurbujaActionPerformed

    private void SeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionActionPerformed
        // TODO add your handling code here:
        aux = ordenar.Seleccion(datos);
        int tope = aux.size();
        Resultados.append("\nEsta es la lista ordenada [SELECCION]: \n");
        for(int i = 0; i < tope; i ++){
            String numActual = String.valueOf(aux.get(i));
            Resultados.append(numActual + ", ");
        }
        Resultados.append("\n ");
    }//GEN-LAST:event_SeleccionActionPerformed

    private void InsercionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsercionActionPerformed
        // TODO add your handling code here:
        aux = ordenar.insercion(datos);
        int tope = aux.size();
        Resultados.append("\nEsta es la lista ordenada [INSERCION]: \n");
        for(int i = 0; i < tope; i ++){
            String numActual = String.valueOf(aux.get(i));
            Resultados.append(numActual + ", ");
        }
        Resultados.append("\n ");
    }//GEN-LAST:event_InsercionActionPerformed

    private void QuickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuickActionPerformed
        // TODO add your handling code here:
        aux = ordenar.Quick(datos, 0, datos.size()-1);
        int tope = aux.size();
        Resultados.append("\nEsta es la lista ordenada [QUICK]: \n");
        for(int i = 0; i < tope; i ++){
            String numActual = String.valueOf(aux.get(i));
            Resultados.append(numActual + ", ");
        }
        Resultados.append("\n ");
    }//GEN-LAST:event_QuickActionPerformed
    
    private void ShellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShellActionPerformed
        // TODO add your handling code here:
        aux = ordenar.Shell(datos, lim);
        int tope = aux.size();
        Resultados.append("\nEsta es la lista ordenada [SHELL]: \n");
        for(int i = 0; i < tope; i ++){
            String numActual = String.valueOf(aux.get(i));
            Resultados.append(numActual + ", ");
        }
        Resultados.append("\n ");
    }//GEN-LAST:event_ShellActionPerformed

    private void MergeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MergeActionPerformed
        // TODO add your handling code here:
        aux = ordenar.Merge(datos);
        int tope = aux.size();
        Resultados.append("\nEsta es la lista ordenada [MERGE]: \n");
        for(int i = 0; i < tope; i ++){
            String numActual = String.valueOf(aux.get(i));
            Resultados.append(numActual + ", ");
        }
        Resultados.append("\n ");
    }//GEN-LAST:event_MergeActionPerformed

    private void GenerarNumerosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarNumerosActionPerformed
        // TODO add your handling code here:
        String numeros = NumerosAleatorios.getText();
        int num = Integer.parseInt(numeros);
        Random n = new Random();
        System.out.println("- Los numeros por generar son: " + numeros);
        Resultados.append ("La lista de números es: \r\n");
        for(int i = 0; i < num; i++){
           int aleatorio = n.nextInt(lim)+1;
           datos.add(aleatorio);
           String mostrar = String.valueOf(aleatorio);
           Resultados.append(mostrar + ", ");
        }
        Resultados.append("\n ");
    }//GEN-LAST:event_GenerarNumerosActionPerformed
//--------------------------------------------------------------------------------------------LISTO
    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        // TODO add your handling code here:
        Resultados.setText("");
        datos.clear();
        aux.clear();
    }//GEN-LAST:event_LimpiarActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(grafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(grafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(grafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(grafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new grafica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Burbuja;
    private javax.swing.JLabel Encabezado;
    private javax.swing.JButton GenerarNumeros;
    private javax.swing.JButton Insercion;
    private javax.swing.JButton Limpiar;
    private javax.swing.JButton Merge;
    private javax.swing.JLabel NotaSeleccion;
    private javax.swing.JLabel NotaUsuario;
    private javax.swing.JTextField NumerosAleatorios;
    private javax.swing.JButton Quick;
    private javax.swing.JTextArea Resultados;
    private javax.swing.JButton Seleccion;
    private javax.swing.JButton Shell;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
